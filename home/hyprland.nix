{ config, pkgs, lib, ... }: {
  wayland.windowManager.hyprland = {
    enable = true;
    xwayland.enable = true;
    systemd.enable = true;
    
    settings = {
      # Remove autogenerated warning
      autogenerated = 0;

      # Monitor configuration - Ultrawide 5120x1440@240Hz
      monitor = [
        "DP-1,5120x1440@240,0x0,1"
      ];

      # Xwayland settings
      xwayland = {
        force_zero_scaling = true;
      };

      # Programs
      "$terminal" = "kitty";
      "$fileManager" = "env GSK_RENDERER=gl nautilus";
      "$browser" = "brave";
      "$menu" = "pkill wofi || wofi --show drun";

      # Autostart applications
      exec-once = [
        "hyprpaper"
        "nm-applet --indicator"
      ];

      # Environment variables (user-level)
      env = [
        # NVIDIA + Wayland + Hyprland-specific
        "__GLX_VENDOR_LIBRARY_NAME,nvidia"
        "__GL_GSYNC_ALLOWED,false"
        "__GL_VRR_ALLOWED,false"
        "GBM_BACKEND,nvidia-drm"
        
        # Hyprland session identifiers
        "XDG_CURRENT_DESKTOP,Hyprland"
        "XDG_SESSION_DESKTOP,Hyprland"
        "XDG_SESSION_TYPE,wayland"
        
        # Hyprcursor and Xcursor settings
        "HYPRCURSOR_SIZE,24"
        "HYPRCURSOR_THEME,Bibata-Modern-Ice"
        "XCURSOR_SIZE,24"
        "XCURSOR_THEME,Bibata-Modern-Ice"
        
        # GTK/Qt theming
        "GTK_THEME,Adwaita-dark"
        "QT_STYLE_OVERRIDE,Adwaita-dark"
        "QT_QPA_PLATFORMTHEME,gtk4"
        
        # Hyprshot config
        "HYPRSHOT_DIR,/home/reclyptor/Screenshots"
      ];

      # Input configuration
      input = {
        kb_layout = "us";
        kb_variant = "";
        kb_model = "";
        kb_options = "";
        kb_rules = "";
        
        repeat_delay = 200;
        repeat_rate = 25;
        
        follow_mouse = 1;
        sensitivity = 0;
        
        touchpad = {
          natural_scroll = false;
        };
      };

      # Per-device config example
      device = {
        name = "epic-mouse-v1";
        sensitivity = -0.5;
      };

      # General window settings
      general = {
        gaps_in = 5;
        gaps_out = 20;
        border_size = 2;
        "col.active_border" = "rgba(A4C639FF)";
        "col.inactive_border" = "rgba(A4C6394D)";
        resize_on_border = false;
        allow_tearing = false;
        layout = "dwindle";
      };

      # Decoration settings
      decoration = {
        rounding = 6;
        active_opacity = 1.0;
        inactive_opacity = 1.0;
        
        shadow = {
          enabled = true;
          range = 4;
          render_power = 3;
          color = "rgba(1a1a1aee)";
        };
        
        blur = {
          enabled = true;
          size = 3;
          passes = 1;
          vibrancy = 0.1696;
        };
      };

      # Animation settings
      animations = {
        enabled = true;
        
        bezier = [
          "easeOutQuint,0.23,1,0.32,1"
          "easeInOutCubic,0.65,0.05,0.36,1"
          "linear,0,0,1,1"
          "almostLinear,0.5,0.5,0.75,1.0"
          "quick,0.15,0,0.1,1"
        ];
        
        animation = [
          "global, 1, 10, default"
          "border, 1, 5.39, easeOutQuint"
          "windows, 1, 4.79, easeOutQuint"
          "windowsIn, 1, 4.1, easeOutQuint, popin 87%"
          "windowsOut, 1, 1.49, linear, popin 87%"
          "fadeIn, 1, 1.73, almostLinear"
          "fadeOut, 1, 1.46, almostLinear"
          "fade, 1, 3.03, quick"
          "layers, 1, 3.81, easeOutQuint"
          "layersIn, 1, 4, easeOutQuint, fade"
          "layersOut, 1, 1.5, linear, fade"
          "fadeLayersIn, 1, 1.79, almostLinear"
          "fadeLayersOut, 1, 1.39, almostLinear"
          "workspaces, 1, 1.94, almostLinear, fade"
          "workspacesIn, 1, 1.21, almostLinear, fade"
          "workspacesOut, 1, 1.94, almostLinear, fade"
        ];
      };

      # Layout settings
      dwindle = {
        pseudotile = true;
        preserve_split = true;
      };

      master = {
        new_status = "master";
      };

      # Misc settings
      misc = {
        force_default_wallpaper = -1;
        disable_hyprland_logo = false;
      };

      # Key bindings
      "$mainMod" = "SUPER";

      bind = [
        # Applications
        "$mainMod, RETURN, exec, $terminal"
        "$mainMod, B, exec, $browser"
        "$mainMod, E, exec, $fileManager"
        
        # Windows
        "$mainMod, Q, killactive"
        "$mainMod SHIFT, Q, exec, hyprctl activewindow | grep pid | tr -d 'pid:' | xargs kill"
        "$mainMod, F, fullscreen, 0"
        "$mainMod, M, fullscreen, 1"
        "$mainMod, T, togglefloating"
        "$mainMod, P, pseudo"
        "$mainMod SHIFT, T, workspaceopt, allfloat"
        "$mainMod, J, togglesplit"
        "$mainMod SHIFT, right, resizeactive, 100 0"
        "$mainMod SHIFT, left, resizeactive, -100 0"
        "$mainMod SHIFT, down, resizeactive, 0 100"
        "$mainMod SHIFT, up, resizeactive, 0 -100"
        "$mainMod, G, togglegroup"
        "$mainMod, K, swapsplit"
        "$mainMod ALT, left, swapwindow, l"
        "$mainMod ALT, right, swapwindow, r"
        "$mainMod ALT, up, swapwindow, u"
        "$mainMod ALT, down, swapwindow, d"
        
        # Actions
        "$mainMod SHIFT, R, exec, hyprctl reload"
        "$mainMod, PRINT, exec, hyprshot -m output"
        "$mainMod SHIFT, S, exec, hyprshot -m region"
        "$mainMod CTRL, RETURN, exec, $menu"
        "$mainMod, H, exec, hyprshade toggle blue-light-filter"
        "$mainMod, L, exec, hyprlock"
        
        # Workspaces
        "$mainMod, 1, workspace, 1"
        "$mainMod, 2, workspace, 2"
        "$mainMod, 3, workspace, 3"
        "$mainMod, 4, workspace, 4"
        "$mainMod, 5, workspace, 5"
        "$mainMod, 6, workspace, 6"
        "$mainMod, 7, workspace, 7"
        "$mainMod, 8, workspace, 8"
        "$mainMod, 9, workspace, 9"
        "$mainMod, 0, workspace, 10"
        
        "$mainMod SHIFT, 1, movetoworkspace, 1"
        "$mainMod SHIFT, 2, movetoworkspace, 2"
        "$mainMod SHIFT, 3, movetoworkspace, 3"
        "$mainMod SHIFT, 4, movetoworkspace, 4"
        "$mainMod SHIFT, 5, movetoworkspace, 5"
        "$mainMod SHIFT, 6, movetoworkspace, 6"
        "$mainMod SHIFT, 7, movetoworkspace, 7"
        "$mainMod SHIFT, 8, movetoworkspace, 8"
        "$mainMod SHIFT, 9, movetoworkspace, 9"
        "$mainMod SHIFT, 0, movetoworkspace, 10"
        
        "$mainMod, Tab, workspace, m+1"
        "$mainMod SHIFT, Tab, workspace, m-1"
        
        "$mainMod, mouse_down, workspace, e+1"
        "$mainMod, mouse_up, workspace, e-1"
        "$mainMod CTRL, down, workspace, empty"
        
        # Move focus
        "$mainMod, left, movefocus, l"
        "$mainMod, right, movefocus, r"
        "$mainMod, up, movefocus, u"
        "$mainMod, down, movefocus, d"
      ];

      # Bind with repeat (binde)
      binde = [
        "ALT,Tab,cyclenext"
        "ALT,Tab,bringactivetotop"
      ];

      # Mouse bindings
      bindm = [
        "$mainMod, mouse:272, movewindow"
        "$mainMod, mouse:273, resizewindow"
      ];

      # Volume and brightness controls (bindel)
      bindel = [
        ",XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+"
        ",XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-"
        ",XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
        ",XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"
        ",XF86MonBrightnessUp, exec, brightnessctl s 10%+"
        ",XF86MonBrightnessDown, exec, brightnessctl s 10%-"
      ];

      # Media controls (bindl)
      bindl = [
        ", XF86AudioNext, exec, playerctl next"
        ", XF86AudioPause, exec, playerctl play-pause"
        ", XF86AudioPlay, exec, playerctl play-pause"
        ", XF86AudioPrev, exec, playerctl previous"
      ];

      # Window rules
      windowrulev2 = [
        "suppressevent maximize, class:.*"
        "nofocus,class:^$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0"
        "float, class:^(jetbrains-.*),title:^(win.*)"
        "noinitialfocus, opacity 0.9 0.9, class:^(jetbrains-.*)"
      ];
    };

    # Extra config for things not yet supported in settings
    extraConfig = ''
      # Additional custom configuration can go here
    '';
  };

  # Hyprpaper configuration
  services.hyprpaper = {
    enable = true;
    settings = {
      preload = [
        "${config.home.homeDirectory}/.config/wallpapers/default.jpg"
      ];
      wallpaper = [
        ", ${config.home.homeDirectory}/.config/wallpapers/default.jpg"
      ];
    };
  };

  # Copy wallpaper from Nix configuration to home directory
  home.file.".config/wallpapers/default.jpg".source = ../wallpapers/default.jpg;

  # Hypridle configuration (optional - enable if you want idle management)
  # services.hypridle = {
  #   enable = true;
  #   settings = {
  #     general = {
  #       lock_cmd = "pidof hyprlock || hyprlock";
  #       before_sleep_cmd = "loginctl lock-session";
  #       after_sleep_cmd = "hyprctl dispatch dpms on";
  #     };
  #
  #     listener = [
  #       {
  #         timeout = 300; # 5 minutes
  #         on-timeout = "brightnessctl -s set 10";
  #         on-resume = "brightnessctl -r";
  #       }
  #       {
  #         timeout = 600; # 10 minutes
  #         on-timeout = "loginctl lock-session";
  #       }
  #       {
  #         timeout = 900; # 15 minutes
  #         on-timeout = "hyprctl dispatch dpms off";
  #         on-resume = "hyprctl dispatch dpms on";
  #       }
  #     ];
  #   };
  # };

  # Hyprlock configuration
  programs.hyprlock = {
    enable = true;
    settings = {
      general = {
        disable_loading_bar = true;
        grace = 0;
        hide_cursor = true;
        no_fade_in = false;
      };

      background = [
        {
          path = "screenshot";
          blur_passes = 3;
          blur_size = 8;
        }
      ];

      input-field = [
        {
          size = "200, 50";
          position = "0, -80";
          monitor = "";
          dots_center = true;
          fade_on_empty = false;
          font_color = "rgb(164, 198, 57)";
          inner_color = "rgb(20, 25, 20)";
          outer_color = "rgb(12, 15, 12)";
          outline_thickness = 5;
          placeholder_text = "Password...";
          shadow_passes = 2;
        }
      ];
    };
  };

  # Waybar configuration
  programs.waybar = {
    enable = true;
    systemd.enable = false;
    
    settings = {
      mainBar = {
        margin = "5 20 0 20";
        
        modules-left = [ "custom/launcher" "custom/spotify" ];
        modules-center = [ "clock" ];
        modules-right = [ "network" "pulseaudio" "tray" ];

        "custom/launcher" = {
          format = "  ";
          interval = 7200;
          on-click = "pkill wofi || wofi --show drun";
          signal = 8;
        };

        "custom/spotify" = {
          format = " 󰓇  {}";
          interval = 1;
          on-click = "~/.config/waybar/scripts/spotify/spotify_play_pause.sh";
          exec = "~/.config/waybar/scripts/spotify/spotify_status.sh";
        };

        clock = {
          tooltip-format = "<big>{:%Y %B}</big>\n<tt><small>{calendar}</small></tt>";
          format = "{:%A | %d %b %Y | %H:%M:%S}";
          interval = 1;
        };

        network = {
          format-wifi = "󰖩  {essid} ({signalStrength}%)";
          format-ethernet = "󰈀 Ethernet";
          format-disconnected = "󰖪 Disconnected";
          on-click = "nm-connection-editor";
        };

        pulseaudio = {
          reverse-scrolling = 1;
          format = "{volume}% {icon}";
          format-bluetooth = "{volume}% {icon}";
          format-muted = " {format_source}";
          format-source-muted = "Muted 🚫";
          format-icons = {
            headphone = "🎧";
            default = [ "🔈" "🔉" "🔊" ];
          };
          on-click = "pavucontrol";
          min-length = 13;
        };

        tray = {
          icon-size = 16;
          spacing = 4;
        };
      };
    };

    style = ''
      * {
        border: none;
        border-radius: 0;
        font-family: JetBrainsMono Nerd Font, monospace;
        font-size: 14px;
        min-height: 0px;
      }

      window#waybar {
        background: transparent;
      }

      window#waybar.hidden {
        opacity: 0.2;
      }

      #custom-launcher {
        padding-left: 10px;
        padding-right: 10px;
        border-radius: 5px 20px 5px 20px;
        border: solid 2px;
        border-color: #A4C639;
        transition: background 0.3s ease,
        border-radius 0.3s ease;
        background: #141914;
        color: #A4C639;
      }

      #custom-launcher:hover {
        border-radius: 20px 5px 20px 5px;
        background: #A4C639;
        color: #141914;
      }

      #custom-spotify {
        margin-left: 8px;
        padding-left: 10px;
        padding-right: 10px;
        border-radius: 5px 20px 5px 20px;
        border: solid 2px;
        border-color: #A4C639;
        transition: background 0.3s ease-in-out,
        border-radius 0.3s ease-in-out;
        background: #141914;
        color: #A4C639;
      }

      #custom-spotify:hover {
        border-radius: 20px 5px 20px 5px;
        background: #A4C639;
        color: #141914;
      }

      #clock {
        padding-left: 16px;
        padding-right: 16px;
        border-radius: 5px 5px 20px 20px;
        border: solid 2px;
        border-color: #A4C639;
        transition: background 0.3s ease,
        border-radius 0.3s ease;
        background: #141914;
        color: #A4C639;
      }

      #clock:hover {
        border-radius: 20px 20px 5px 5px;
        background: #A4C639;
        color: #141914;
      }

      #network {
        margin-right: 8px;
        padding-right: 15px;
        padding-left: 15px;
        border-radius: 20px 5px 20px 5px;
        border: solid 2px;
        border-color: #A4C639;
        transition: background 0.3s ease,
        border-radius 0.3s ease;
        background: #141914;
        color: #A4C639;
      }

      #network:hover {
        border-radius: 5px 20px 5px 20px;
        background: #A4C639;
        color: #141914;
      }

      #pulseaudio {
        margin-right: 8px;
        border-radius: 20px 5px 20px 5px;
        padding-left: 0px;
        padding-right: 0px;
        border: solid 2px;
        border-color: #A4C639;
        transition: background 0.3s ease,
        border-radius 0.3s ease;
        background: #141914;
        color: #A4C639;
      }

      #pulseaudio:hover {
        border-radius: 5px 20px 5px 20px;
        background: #A4C639;
        color: #141914;
      }

      #tooltip {
        background: #141914;
        color: #A4C639;
      }

      #tray {
        padding-left: 16px;
        padding-right: 16px;
        border-radius: 20px 5px 20px 5px;
        border: solid 2px;
        border-color: #A4C639;
        transition: background 0.3s ease,
        border-radius 0.3s ease;
        background: #141914;
        color: #A4C639;
      }

      #tray:hover {
        border-radius: 5px 20px 5px 20px;
        background: #A4C639;
        color: #141914;
      }

      @keyframes blink {
        to {
          background-color: #ffffff;
          color: #484a4a;
        }
      }
    '';
  };


  # Mako notification daemon
  services.mako = {
    enable = true;
    settings = {
      default-timeout = 5000;
      background-color = "#0C0F0C";
      text-color = "#A4C639";
      border-color = "#A4C639";
      border-radius = 10;
      border-size = 2;
      width = 300;
      height = 100;
      padding = "10";
      margin = "10";
    };
  };

  # Wofi launcher
  programs.wofi = {
    enable = true;
    settings = {
      hide_scroll = true;
      show = "drun";
      width = "30%";
      lines = 8;
      line_wrap = "word";
      term = "kitty";
      allow_markup = true;
      always_parse_args = false;
      show_all = true;
      print_command = true;
      layer = "overlay";
      allow_images = true;
      sort_order = "alphabetical";
      gtk_dark = true;
      prompt = "";
      image_size = 20;
      display_generic = false;
      location = "center";
      key_expand = "Tab";
      insensitive = false;
    };
    
    style = ''
      window {
        border: 2px solid #A4C639;
        background-color: #0C0F0C;
        border-radius: 8px;
        opacity: 0.95;
      }

      #input {
        margin: 5px;
        border: #A4C639;
        color: #A4C639;
        background-color: #0C0F0C;
      }

      #inner-box {
        margin: 8px;
        border: none;
        background-color: #0C0F0C;
      }

      #outer-box {
        margin: 8px;
        border: none;
        background-color: #0C0F0C;
      }

      #scroll {
        margin: 0px;
        border: none;
        background-color: #0C0F0C;
      }

      #text {
        margin: 5px;
        border: none;
        color: #A4C639;
      } 

      #entry.activatable #text {
        color: #282a36;
      }

      #entry > * {
        color: #A4C639;
      }

      #entry:selected {
        background-color: #A4C639;
        border-radius: 6px;
      }

      #entry:selected #text {
        background-color: #;
        color: #0C0F0C;
        font-weight: bold;
      }
    '';
  };

  # Additional home packages for Hyprland
  home.packages = with pkgs; [
    brave
    brightnessctl
    playerctl
    pavucontrol
    networkmanagerapplet
  ];

  # Create screenshots directory
  home.file."Screenshots/.keep".text = "";
  
  # Copy Waybar scripts
  home.file.".config/waybar/scripts/spotify/spotify_play_pause.sh" = {
    source = ../scripts/waybar/spotify/spotify_play_pause.sh;
    executable = true;
  };
  
  home.file.".config/waybar/scripts/spotify/spotify_status.sh" = {
    source = ../scripts/waybar/spotify/spotify_status.sh;
    executable = true;
  };
}
